#!/usr/bin/env bash

# Test the installed universal_ctags

set -e

ctags="universal-ctags"
config_dir="$HOME/.ctags.d"
config="${config_dir}/python.ctags"
backup="${config_dir}.backup"
output="sample/tags"

red='\e[1;31m'
green='\e[1;32m'
reset='\e[0m'

# Given the original config dir is backed up
if [ -d ${config_dir} ] ; then
  rm -rf ${backup}
  mv ${config_dir} ${backup}
else
  rm -rf ${backup}
fi
# and it'll get restored when this scenario ends
function clean {
  if [ -d ${backup} ] ; then
    rm -rf ${config_dir}
    mv ${backup} ${config_dir}
  else
    rm -rf ${config_dir}
  fi
}
trap clean EXIT
# and the new config turns off Classes in the output
mkdir -p ${config_dir}
echo "--python-kinds=-c" >${config}

# When we run ctags on some sample source code
(
  cd sample
  ${ctags} -R .
)

# Then the output file should contain func 'my_func'
if ! grep -q -E '^my_func' ${output} ; then
    echo
    echo -e "${red}FAIL${reset}: 'tags' file should contain function 'my_func'" >&2
    echo
    echo "${output}:"
    cat ${output}
    echo
    exit 1
fi
# and should not contain class 'MyClass' (see ${config} above)
if grep -q -E '^MyClass' ${output} ; then
    echo
    echo -e "${red}FAIL${reset}: '${output}' file should not contain class 'MyClass'" >&2
    echo
    echo "${config}:"
    cat ${config}
    echo
    echo "${output}:"
    cat ${output}
    echo
    exit 1
fi

echo -e "${green}OK${reset}" >&2

